type LogEntry = record {
  counter : nat64;
  file : text;
  line : nat32;
  cycle : opt nat;
  version : text;
  message : text;
  timestamp : nat64;
  "variant" : LogVariant;
};
type LogVariant = variant { info; warn; error };
type TaskTimerEntry = record { task : vec nat8; time : nat64 };
service : () -> {
  get_latest_external_transfer : (text) -> (text);
  get_receipt_list : () -> (vec record { text; text }) query;
  get_timers : () -> (vec TaskTimerEntry) query;
  get_transaction_list : () -> (vec record { text; text }) query;
  get_transaction_receipt_from : (text) -> (text);
  get_transaction_value : (text) -> (text);
  print_log_entries : () -> (vec LogEntry) query;
  schedule_task : (nat64, text) -> ();
  verify_transaction : (text) -> (nat, text);
}
